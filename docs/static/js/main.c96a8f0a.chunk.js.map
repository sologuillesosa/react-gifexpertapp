{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGift.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGift","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OACE,sBAAMC,SATa,SAAEC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAjBoB,SAAEP,GAC1BF,EAAeE,EAAEQ,OAAOF,a,+BCPfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAWH,GAF7C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKc,UAAU,2CAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAK,GACLa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAyB1C,OAlBAC,qBAAU,WAERxB,EAASC,GACNwB,MAAM,SAAAC,GAIHH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAOhB,CAACpB,IAEGqB,EDtB2BK,CAAc1B,GAAlCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEdbgB,EAAe,WAAO,IAAD,EAEIzC,mBAAS,CAAC,cAFd,mBAEzB0C,EAFyB,KAEb3C,EAFa,KAKhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCZpB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c96a8f0a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleChangeValue = ( e ) => {\r\n    setInputValue( e.target.value );\r\n  }\r\n\r\n  const handleSubmit = ( e ) => {\r\n    e.preventDefault();\r\n    if( inputValue.trim().length > 2 ) {\r\n      setCategories( cat => [ inputValue, ...cat ] );\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\" \r\n        value={ inputValue }\r\n        onChange={ handleChangeValue }\r\n      />\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Pw2tITKt37rmBBv6CGcLwZXJekja9Sfj`;\t\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n  \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounceIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGift } from '../hooks/useFetchGift'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGift( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map( img => (\r\n              <GifGridItem \r\n                key={ img.id }\r\n                { ...img }\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGift = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs( category )\r\n      .then( imgs => {\r\n\r\n        // setTimeout(() => {\r\n\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          });\r\n\r\n        // }, 3000);\r\n\r\n      } );\r\n      \r\n  }, [category]);\r\n\r\n  return state; // { data[], loading: true }\r\n\r\n};\r\n","import React, { useState } from 'react'; // rsc (React Stateless Component - Reactjs code snippets)\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n  // const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);\r\n  \r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid \r\n              key={ category } \r\n              category={ category } \r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}